// Code generated by protoc-gen-go-psm. DO NOT EDIT.

package realm_j5spb

import (
	context "context"
	psm "github.com/pentops/protostate/psm"
	sqrlx "github.com/pentops/sqrlx.go/sqrlx"
)

// State Query Service for %sRealm
// QuerySet is the query set for the Realm service.

type RealmPSMQuerySet = psm.StateQuerySet[
	*RealmGetRequest,
	*RealmGetResponse,
	*RealmListRequest,
	*RealmListResponse,
	*RealmEventsRequest,
	*RealmEventsResponse,
]

func NewRealmPSMQuerySet(
	smSpec psm.QuerySpec[
		*RealmGetRequest,
		*RealmGetResponse,
		*RealmListRequest,
		*RealmListResponse,
		*RealmEventsRequest,
		*RealmEventsResponse,
	],
	options psm.StateQueryOptions,
) (*RealmPSMQuerySet, error) {
	return psm.BuildStateQuerySet[
		*RealmGetRequest,
		*RealmGetResponse,
		*RealmListRequest,
		*RealmListResponse,
		*RealmEventsRequest,
		*RealmEventsResponse,
	](smSpec, options)
}

type RealmPSMQuerySpec = psm.QuerySpec[
	*RealmGetRequest,
	*RealmGetResponse,
	*RealmListRequest,
	*RealmListResponse,
	*RealmEventsRequest,
	*RealmEventsResponse,
]

func DefaultRealmPSMQuerySpec(tableSpec psm.QueryTableSpec) RealmPSMQuerySpec {
	return psm.QuerySpec[
		*RealmGetRequest,
		*RealmGetResponse,
		*RealmListRequest,
		*RealmListResponse,
		*RealmEventsRequest,
		*RealmEventsResponse,
	]{
		QueryTableSpec: tableSpec,
		ListRequestFilter: func(req *RealmListRequest) (map[string]interface{}, error) {
			filter := map[string]interface{}{}
			return filter, nil
		},
		ListEventsRequestFilter: func(req *RealmEventsRequest) (map[string]interface{}, error) {
			filter := map[string]interface{}{}
			filter["realm_id"] = req.RealmId
			return filter, nil
		},
	}
}

type RealmQueryServiceImpl struct {
	db       sqrlx.Transactor
	querySet *RealmPSMQuerySet
	UnsafeRealmQueryServiceServer
}

var _ RealmQueryServiceServer = &RealmQueryServiceImpl{}

func NewRealmQueryServiceImpl(db sqrlx.Transactor, querySet *RealmPSMQuerySet) *RealmQueryServiceImpl {
	return &RealmQueryServiceImpl{
		db:       db,
		querySet: querySet,
	}
}

func (s *RealmQueryServiceImpl) RealmGet(ctx context.Context, req *RealmGetRequest) (*RealmGetResponse, error) {
	resObject := &RealmGetResponse{}
	err := s.querySet.Get(ctx, s.db, req, resObject)
	if err != nil {
		return nil, err
	}
	return resObject, nil
}

func (s *RealmQueryServiceImpl) RealmList(ctx context.Context, req *RealmListRequest) (*RealmListResponse, error) {
	resObject := &RealmListResponse{}
	err := s.querySet.List(ctx, s.db, req, resObject)
	if err != nil {
		return nil, err
	}
	return resObject, nil
}

func (s *RealmQueryServiceImpl) RealmEvents(ctx context.Context, req *RealmEventsRequest) (*RealmEventsResponse, error) {
	resObject := &RealmEventsResponse{}
	err := s.querySet.ListEvents(ctx, s.db, req, resObject)
	if err != nil {
		return nil, err
	}
	return resObject, nil
}
